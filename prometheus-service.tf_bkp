variable "prometheus_image" {
  description = "The Docker image for the APIs"
  default     = "prom/prometheus"
}

# ECS terraform
resource "aws_ecs_task_definition" "prometheus_td" {
  family                   = "prometheus"
  container_definitions   = jsonencode([
    {
      name  = "prometheus_task_def"
      image = var.prometheus_image
      cpu = 128
      memory = 256
      portMappings = [
        {
          containerPort = 9090
          hostPort      = 9090
          protocol      = "tcp"
        },
        {
        containerPort = 8888
        hostPort      = 8888
        protocol      = "tcp"
        },
        {
        containerPort = 8889
        hostPort      = 8889
        protocol      = "tcp"
        },
        {
        containerPort = 13133
        hostPort      = 13133
        protocol      = "tcp"
        },
        {
        containerPort = 4317
        hostPort      = 4317
        protocol      = "tcp"
        },
        {
        containerPort = 4318
        hostPort      = 4318
        protocol      = "tcp"
        }

      ]
    }
  ])
}

resource "aws_ecs_service" "prometheus_service" {
  name            = "prometheus-service"
  cluster         = aws_ecs_cluster.my_cluster.id
  task_definition = aws_ecs_task_definition.prometheus_td.arn
  desired_count   = 1
  launch_type     = "FARGATE"


  network_configuration {
    subnets          = [aws_subnet.public_subnet_b.id]
    security_groups  = [aws_security_group.ecs_sg.id]  # Specify security groups if needed
    assign_public_ip = true
  }
  
  depends_on = [aws_ecs_task_definition.prometheus_td]
}
